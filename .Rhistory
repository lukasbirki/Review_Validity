install.packages("litsearchr ")
install.packages("tidyverse ")
install.packages("tidyverse")
install.packages("litsearchr")
install.packages("revtools")
library(revtools)
remotes::install_github("elizagrames/litsearchr", ref="main")
install.packages(remotes)
install.packages("remotes")
install.packages("Rtools")
remotes::install_github("elizagrames/litsearchr", ref="main")
library(litsearchr)
search_directory <- system.file("extdata", package="litsearchr")
search_directory
naiveimport <-
litsearchr::import_results(directory = search_directory, verbose = TRUE)
naiveresults <-
litsearchr::remove_duplicates(naiveimport, field = "title", method = "string_osa")
naiveresults
naiveimport
rakedkeywords <-
litsearchr::extract_terms(
text = paste(naiveresults$title, naiveresults$abstract),
method = "fakerake",
min_freq = 2,
ngrams = TRUE,
min_n = 2,
language = "English"
)
naivedfm <-
litsearchr::create_dfm(
elements = paste(naiveresults$title, naiveresults$abstract),
features = all_keywords
)
naivegraph <-
litsearchr::create_network(
search_dfm = naivedfm,
min_studies = 2,
min_occ = 2
)
#> Loading required namespace: stopwords
#>
all_keywords <- unique(append(taggedkeywords, rakedkeywords))
taggedkeywords <-
litsearchr::extract_terms(
keywords = naiveresults$keywords,
method = "tagged",
min_freq = 2,
ngrams = TRUE,
min_n = 2,
language = "English"
)
naivedfm <-
litsearchr::create_dfm(
elements = paste(naiveresults$title, naiveresults$abstract),
features = all_keywords
)
#> Loading required namespace: stopwords
#>
all_keywords <- unique(append(taggedkeywords, rakedkeywords))
taggedkeywords <-
litsearchr::extract_terms(
keywords = naiveresults$keywords,
method = "tagged",
min_freq = 2,
ngrams = TRUE,
min_n = 2,
language = "English"
)
naivedfm <-
litsearchr::create_dfm(
elements = paste(naiveresults$title, naiveresults$abstract),
features = all_keywords
)
naivegraph <-
litsearchr::create_network(
search_dfm = naivedfm,
min_studies = 2,
min_occ = 2
)
naivegraph
reducedgraph <-
litsearchr::reduce_graph(naivegraph, cutoff_strength = cutoff[1])
cutoff <-
litsearchr::find_cutoff(
naivegraph,
method = "cumulative",
percent = .80,
imp_method = "strength"
)
reducedgraph <-
litsearchr::reduce_graph(naivegraph, cutoff_strength = cutoff[1])
searchterms <- litsearchr::get_keywords(reducedgraph)
head(searchterms, 20)
View(naiveimport)
