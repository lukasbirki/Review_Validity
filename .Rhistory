ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year")-> df_export
bib2df::df2bib(df_export, "review/data/Bib_files/review_import_zotero.bib")
temp
View(df_export)
bib2df::df2bib(df_export, "review/data/Bib_files/review_import_zotero.bib")
#Note: 16 (positively coded) papers were not matched by the algorithm and need to be manually imported in Zotero
df_combined %>%
filter(is.na(Authors)) -> temp
bib2df::df2bib(df_export)
install.packages("journalabbr")
devtools::install_github("ropensci/bib2df")
source("C:/Users/birkenls/OneDrive - GESIS – Leibniz-Institut für Sozialwissenschaften e.V/Projekte/Review_Validity/Review/r_scripts/Article Wrangling.R", echo=TRUE)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "--", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year") %>% slice(20)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "--", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year") %>% slice(1:20)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "--", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year") %>% slice(1:20)-> df_export
bib2df::df2bib(df_export, "review/data/Bib_files/review_import_zotero.bib")
bib2df::df2bib(df_export)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "--", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year") %>% slice(1:20)-> df_export %>% write_csv(df_export, "test.csv")
df_export %>% write_csv(df_export, "test.csv")
write_csv(df_export, "test.csv")
write_csv(df_combined, "Review/data/list_doi_import_zotero.csv")
df_coded <- bib2df::bib2df("review/data/Bib_files/full_zotero_export.bib")
df_coded
View(df_coded)
df_coded <- readr::read_csv("review/data/Bib_files/complete_list_coded.csv")
df_coded <- readr::read_csv("review/data/Bib_files/complete_list_coded.csv")
df_coded <- readr::read_csv2("review/data/Bib_files/complete_list_coded.csv")
df_coded <- readr::read_csv2("review/data/Bib_files/complete_list_coded.csv", sep = ",")
df_coded <- read.csv("review/data/Bib_files/complete_list_coded.csv", sep = ",")
View(df_coded)
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";") %>%
mutate(authors_new = trimws(AUTHOR),
authors_new = tolower(authors_new)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
names(df_coded)
df_coded %>%
select(Author) %>%
tidyr::separate_rows(Author, sep = ";")
df_coded <- read.csv("review/data/Bib_files/complete_list_coded.csv", sep = ",", encoding = "UTF-8")
df_coded
View(df_coded)
df_coded %>%
select(Author) %>%
tidyr::separate_rows(Author, sep = ";")
df_coded %>%
select(Author) %>%
tidyr::separate_rows(Author, sep = ";") %>%
mutate(authors_new = trimws(Author),
authors_new = tolower(authors_new)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
df_authors
write.csv(df_authors, "review/data/list_authors.csv")
View(df_authors)
df_coded %>%
select(Author) %>%
tidyr::separate_rows(Author, sep = ";") %>%
mutate(authors_new = trimws(Author)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
df_authors
df_coded %>%
select(Author) %>%
tidyr::separate_rows(Author, sep = ";") %>%
mutate(authors_new = trimws(Author),
authors_new = tolower(authors_new)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
write.csv(df_authors, "review/data/list_authors.csv")
df_authors
write.csv(df_authors, "review/data/list_authors.csv")
readr::read_csv("data/literature_coded_abstracts.csv") %>% drop_na(abstract) %>%
select(abstract, code = "lukas.birkenmaier@gesis.org",journal) %>%
mutate(abstract_join = tolower(abstract)) %>%
ggplot(aes(x=reorder(journal, table(journal)[journal]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
readr::read_csv("Review/data/literature_coded_abstracts.csv") %>% drop_na(abstract) %>%
select(abstract, code = "lukas.birkenmaier@gesis.org",journal) %>%
mutate(abstract_join = tolower(abstract)) %>%
ggplot(aes(x=reorder(journal, table(journal)[journal]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
ggsave("plots/v0_journal_distribution.jpeg")
ggsave("Review/plots/v0_journal_distribution.jpeg")
df_coded  %>%
ggplot(aes(x=reorder(JOURNAL, table(JOURNAL)[JOURNAL]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df_coded
View(df_coded)
df_coded  %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df_coded  %>%
drop_na(Publication.Title) %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df_coded  %>%
drop_na(Publication.Title) %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title])))
df_coded  %>%
drop_na(Publication.Title) %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title]))) +
geom_bar()
df_coded  %>%
drop_na(Publication.Title) %>% select(Publication.Title)
df_coded  %>%
janitor::remove_empty("rows")
df_coded  %>%
janitor::remove_empty("rows") %>% select(Publication.Title)
df_coded  %>%
janitor::remove_empty("rows") %>% select(Publication.Title) %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df_coded  %>%
select(Publication.Title) %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
ggsave("plots/v1_journal_distribution.jpeg")
ggsave("Review/plots/v1_journal_distribution.jpeg")
df_authors
write.csv(df_authors, "Interviews/list_authors.csv")
library(tidyverse)
dplyr::starwars
print("x")
Sys.getenv()
Sys.getenv()
getwd()
df_temp <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
slice(-35) %>%
dplyr::rename(coder = `E-Mail-Adresse`,
eligibil = names(.)[4]) %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) %>%
drop_na(coder)
library(tidyverse)
library(irr)
df_temp <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
slice(-35) %>%
dplyr::rename(coder = `E-Mail-Adresse`,
eligibil = names(.)[4]) %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) %>%
drop_na(coder)
df_temp
View(df_temp)
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
slice(-35) %>%
dplyr::rename(coder = `E-Mail-Adresse`,
eligibil = names(.)[4]) %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) %>%
drop_na(coder)
df
unique(df$coder)
df %>%
filter(coder == "lukas.birkenmaier@outlook.de")
df %>%
filter(coder == "lukas.birkenmaier@outlook.de") %>%
select(`What is the data source?` = source)
df %>%
filter(coder == "lukas.birkenmaier@outlook.de") %>%
select(source = `What is the data source?` )
df %>%
filter(coder == "lukas.birkenmaier@outlook.de") %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`)
df %>%
filter(coder == "lukas.birkenmaier@outlook.de")
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(E-Mail-Adresse == "lukas.birkenmaier@outlook.de") %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`) ->
df
readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(E-Mail-Adresse == "lukas.birkenmaier@outlook.de")
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`) ->
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`) ->
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`)
readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de")
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`)
df
readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`)
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`)
df |>
drop_na()
df |>
drop_na(source)
df |>
drop_na(source) %>%
head()
df |>
drop_na(source) |>
head()
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`, id)
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`, id)
df
df |>
drop_na(source) |>
separate_rows() |>
head()
df |>
drop_na(source) |>
separate_rows()
df |>
drop_na(source) |>
separate_rows(source:outcome)
readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
outcome = `What is the outcome of the method?`, id)
readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx")
readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_"))
readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) %>%
names()
readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) -> r
View(r)
df
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) %>%
select(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
id, target_construct)
df
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) %>%
dplyr::rename(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`,
id, target_construct)
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) %>%
dplyr::rename(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`)
df
df %>%
drop_na(source) %>%
separate_rows(source:outcome)
View(df)
df %>%
drop_na(source) %>%
separate_rows(source:method_name)
df %>%
drop_na(source) %>%
separate_rows(source)
df %>%
drop_na(source) %>%
separate_rows(source,target_construct,method_type)
df %>%
drop_na(source) %>%
separate_rows(c(source,target_construct,method_type))
df %>%
drop_na(source) %>%
separate_rows(source,target_construct)
df %>%
drop_na(source) %>%
separate_rows(source)
df <- readxl::read_xlsx("Review/2_coding/data/export_forms.xlsx") %>%
filter(`E-Mail-Adresse` == "lukas.birkenmaier@outlook.de") %>%
mutate(id = paste(stringr::word(.$`This is the title of the Study`,1),
stringr::word(.$`These are the Authors`,1),sep = "_")) %>%
dplyr::rename(source = `What is the data source?`,
language = `What is the data language?`,language_others = `If others: Name all languages in the data? If there is more than one language assessed, please separate languages by a comma (,)` ,
method_type = `What Type(s) of method are initially applied?`,
method_name = `What is the name of the method? If there is more than one method applied, please separate methods by a comma (,)`) %>%
drop_na(source)
df
df %>%
separate_rows(method_type)
df %>%
separate_rows(method_type) %>%
ggplot(aes(x=reorder(method_type, table(method_type)[method_type]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df %>%
separate_rows(method_type, by = ",") %>%
ggplot(aes(x=reorder(method_type, table(method_type)[method_type]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df %>%
separate_rows(method_type, by = ",")
df %>%
separate_rows(method_type,sep = ",") %>%
ggplot(aes(x=reorder(method_type, table(method_type)[method_type]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df %>%
separate_rows(source,sep = ",") %>%
ggplot(aes(x=reorder(source, table(source)[source]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df %>%
separate_rows(target_construct,sep = ",") %>%
ggplot(aes(x=reorder(target_construct, table(target_construct)[target_construct]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
install.packages("wordcloud2")
df %>%
separate_rows(method_type,sep = ",") %>%
ggplot(aes(x = method_type, y = target_construct)) +
geom_tile(color = "black") +
coord_fixed() +
theme(legend.position = "none")
mean_c <- function(x){
mean_c <- mean %o% c
}
mean_c(1,2)
mean_c <- function(){
mean_c <- mean %o% c
}
mean_c(1,2)
mean(c(1,2))
mean_c <- function(x){
mean_c <- mean %o% c(x)
}
mean_c(1,2)
mean_c <- mean %o% c
mean_c <- function(){
mean_c <- mean %o% c
}
mean_c(1,2)
mean_c <- mean %o% c
mean_c(1,2)
mean_c <- function(x,y,){
mean_c(1,2)
mean_c <- function(x,y){
mean_c <- mean %o% c
}
mean_c(1,2)
mean_c <- mean %o% c
mean_c <- mean %0% c
mean_c <- mean %o% c
mean %o% c
mean_c <- mean() %o% c()
mean() %o% c()
