df_coded <- bib2df::bib2df("Bib-files/full_zotero_export.bib")
df_coded <- bib2df::bib2df("Bib-files/full_zotero_export.bib")
df_coded <- bib2df::bib2df("Bib-files/full_zotero_export.bib")
df_coded <- bib2df::bib2df("Bib_files/full_zotero_export.bib")
View(df_coded)
df_coded %>%
mutate(authors_new = strsplit(as.character(.$authors), ";")) %>%
unnest(authors_new) %>%
mutate(authors_new = trimws(authors_new)) %>% #Removing leading and/or trailing white spaces
drop_na(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>%
unnest(authors_new)
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>%
unnest(authors_new) %>%
mutate(authors_new = trimws(authors_new)) %>% #Removing leading and/or trailing white spaces
drop_na(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
df_authors
write.csv(df_authors, "data/list_authors.csv")
readr::read_csv("data/literature_coded_abstracts.csv") %>% drop_na(abstract) %>%
select(abstract, code = "lukas.birkenmaier@gesis.org",journal) %>%
mutate(abstract_join = tolower(abstract)) %>%
ggplot(aes(x=reorder(journal, table(journal)[journal]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df_coded  %>%
ggplot(aes(x=reorder(JOURNAL, table(JOURNAL)[JOURNAL]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
ggsave("plots/v1_journal_distribution.jpeg")
readr::read_csv("data/literature_coded_abstracts.csv") %>% drop_na(abstract) %>%
select(abstract, code = "lukas.birkenmaier@gesis.org",journal) %>%
mutate(abstract_join = tolower(abstract)) %>%
ggplot(aes(x=reorder(journal, table(journal)[journal]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
ggsave("plots/v0_journal_distribution.jpeg")
df_coded  %>%
ggplot(aes(x=reorder(JOURNAL, table(JOURNAL)[JOURNAL]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
ggsave("plots/v1_journal_distribution.jpeg")
library(revtools)
library(tidyverse)
lit_round_1 <- readr::read_csv("data/literature_unfiltered.csv") %>%
drop_na(Abstract) %>%
mutate(abstract_join = tolower(Abstract))
coded_round_1 <- readr::read_csv("review&data/literature_coded_abstracts.csv") %>% drop_na(abstract) %>%
select(abstract, code = "lukas.birkenmaier@gesis.org") %>%
mutate(abstract_join = tolower(abstract)) %>%
filter(code == 1 | code == 0 )
coded_round_1 <- readr::read_csv("review/data/literature_coded_abstracts.csv") %>% drop_na(abstract) %>%
select(abstract, code = "lukas.birkenmaier@gesis.org") %>%
mutate(abstract_join = tolower(abstract)) %>%
filter(code == 1 | code == 0 )
lit_round_1 <- readr::read_csv("review/data/literature_unfiltered.csv") %>%
drop_na(Abstract) %>%
mutate(abstract_join = tolower(Abstract))
#https://www.rdocumentation.org/packages/stringdist/versions/0.9.8/topics/stringdist-metrics
fuzzyjoin::stringdist_left_join(coded_round_1, lit_round_1, by = "abstract_join", max_dist = 5) -> df_combined
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE") %>%
select(BIBTEXKEY, CATEGORY, DOI = "DOI Link", AUTHOR = Authors, TITLE = "Article Title", JOURNAL = "Source Title", ABSTRACT = Abstract)-> df_export
bib2df::df2bib(df_export, "review/Bib_files/review_import_zotero.bib")
bib2df::df2bib(df_export, "review/data/Bib_files/review_import_zotero.bib")
#Note: 18 (positively coded) papers were not matched by the algorithm and need to be manually imported in Zotero
df_combined %>%
filter(is.na(Authors)) -> temp
df_coded <- bib2df::bib2df("review/data/Bib_files/full_zotero_export.bib")
df_coded
View(df_coded)
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>%
unnest(authors_new)
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>%
unnest(authors_new)-> t
View(t)
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>%
unnest(authors_new) %>% select(authors_new)-> t
View(t)
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";"))
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>% select(authors_new)-> t
View(t)
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>% select(authors_new) %>%
unnest(authors_new)
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>% select(authors_new) %>%
unnest(authors_new) %>% select(authors_new)-> t
View(lit_round_1)
View(t)
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>% select(authors_new) %>%
unnest(authors_new) %>%unnest(authors_new) %>%  select(authors_new)-> t
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>% select(authors_new) ->  t1
View(t1)
t2 %>% tidyr::unnest(authors_new) %>%  select(authors_new)-> t %>%
mutate(authors_new = trimws(authors_new)) %>% #Removing leading and/or trailing white spaces
drop_na(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
t1%>%
tidyr::unnest(authors_new) -> t2
t2
t1%>%
rowwise() %>%
tidyr::unnest(authors_new) -> t2
separate_rows(df_coded,authors_new )
separate_rows(AUTHOR,authors_new )
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>%
tidyr::separate_rows(authors_new )
df_coded %>%
mutate(authors_new = strsplit(as.character(.$AUTHOR), ";")) %>% select(authors_new) %>%
tidyr::separate_rows(authors_new )
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(authors_new )
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(AUTHOR)
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";")
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";") -> t1
View(t1)
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";") %>%
mutate(authors_new = trimws(AUTHOR))
df_coded %>%
select(authors_new == AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";") %>%
mutate(authors_new = trimws(AUTHOR)) %>% #Removing leading and/or trailing white spaces
drop_na(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
df_coded %>%
select(authors_new == AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";")
df_coded %>%
select(AUTHOR = authors_new) %>%
tidyr::separate_rows(AUTHOR, sep = ";")
df_coded %>%
select(authors_new = AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";")
df_coded %>%
select(authors_new == AUTHOR)
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";") %>%
mutate(authors_new = trimws(AUTHOR)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new)
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";") %>%
mutate(authors_new = trimws(AUTHOR)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
View(df_authors)
write.csv(df_authors, "review/data/list_authors.csv")
df_authors
df_authors %>%
filter(starts_with("wouter"))
df_authors %>%
filter(str_detect(, authors_new, "wouter"))
df_authors %>%
filter(str_detect(authors_new, 'Toyota|Mazda'))
df_authors %>%
filter(str_detect(authors_new, 'wouter'))
df_authors
df_authors %>%
filter(str_detect(authors_new, 'HG'))
df_authors %>%
filter(str_detect(authors_new, 'Wou'))
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";") %>%
mutate(authors_new = trimws(AUTHOR),
authors_new = tolower(authors_new)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
df_authors %>%
filter(str_detect(authors_new, 'Wou'))
df_authors %>%
filter(str_detect(authors_new, 'wou'))
authors_new
View(df_authors)
View(df_coded)
df_combined
View(df_combined)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE") %>%
select(BIBTEXKEY, CATEGORY, DOI = "DOI Link", AUTHOR = "Author Full Name", TITLE = "Article Title", JOURNAL = "Source Title", ABSTRACT = Abstract)-> df_export
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE") %>%
select(BIBTEXKEY, CATEGORY, DOI = "DOI Link", AUTHOR = "Author Full Names", TITLE = "Article Title", JOURNAL = "Source Title", ABSTRACT = Abstract)-> df_export
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";") %>%
mutate(authors_new = trimws(AUTHOR),
authors_new = tolower(authors_new)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
View(df_authors)
names(df_combined)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(´Start Page´, "-", ´End Page´))
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(Start Page, "-", End Page))
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "-", `End Page`))
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "-", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year")-> df_export
View(df_export)
View(df_combined)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "-", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year")-> df_export
bib2df::df2bib(df_export, "review/data/Bib_files/review_import_zotero.bib")
#Note: 16 (positively coded) papers were not matched by the algorithm and need to be manually imported in Zotero
df_combined %>%
filter(is.na(Authors)) -> temp
View(temp)
df_export
df_coded
df_coded <- bib2df::bib2df("review/data/Bib_files/full_zotero_export.bib")
View(df_coded)
df_combined
df_export
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "--", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year")-> df_export
bib2df::df2bib(df_export, "review/data/Bib_files/review_import_zotero.bib")
temp
View(df_export)
bib2df::df2bib(df_export, "review/data/Bib_files/review_import_zotero.bib")
#Note: 16 (positively coded) papers were not matched by the algorithm and need to be manually imported in Zotero
df_combined %>%
filter(is.na(Authors)) -> temp
bib2df::df2bib(df_export)
install.packages("journalabbr")
devtools::install_github("ropensci/bib2df")
source("C:/Users/birkenls/OneDrive - GESIS – Leibniz-Institut für Sozialwissenschaften e.V/Projekte/Review_Validity/Review/r_scripts/Article Wrangling.R", echo=TRUE)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "--", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year") %>% slice(20)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "--", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year") %>% slice(1:20)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "--", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year") %>% slice(1:20)-> df_export
bib2df::df2bib(df_export, "review/data/Bib_files/review_import_zotero.bib")
bib2df::df2bib(df_export)
df_combined %>%
dplyr::mutate(BIBTEXKEY = row_number(),
CATEGORY = "ARTICLE",
PAGES = paste(`Start Page`, "--", `End Page`)) %>%
select(BIBTEXKEY,
CATEGORY,
PAGES,
DOI = "DOI Link",
AUTHOR = "Author Full Names",
TITLE = "Article Title",
JOURNAL = "Source Title",
ABSTRACT = Abstract,
VOLUME = "Volume",
NUMBER = "Part Number",
YEAR = "Publication Year") %>% slice(1:20)-> df_export %>% write_csv(df_export, "test.csv")
df_export %>% write_csv(df_export, "test.csv")
write_csv(df_export, "test.csv")
write_csv(df_combined, "Review/data/list_doi_import_zotero.csv")
df_coded <- bib2df::bib2df("review/data/Bib_files/full_zotero_export.bib")
df_coded
View(df_coded)
df_coded <- readr::read_csv("review/data/Bib_files/complete_list_coded.csv")
df_coded <- readr::read_csv("review/data/Bib_files/complete_list_coded.csv")
df_coded <- readr::read_csv2("review/data/Bib_files/complete_list_coded.csv")
df_coded <- readr::read_csv2("review/data/Bib_files/complete_list_coded.csv", sep = ",")
df_coded <- read.csv("review/data/Bib_files/complete_list_coded.csv", sep = ",")
View(df_coded)
df_coded %>%
select(AUTHOR) %>%
tidyr::separate_rows(AUTHOR, sep = ";") %>%
mutate(authors_new = trimws(AUTHOR),
authors_new = tolower(authors_new)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
names(df_coded)
df_coded %>%
select(Author) %>%
tidyr::separate_rows(Author, sep = ";")
df_coded <- read.csv("review/data/Bib_files/complete_list_coded.csv", sep = ",", encoding = "UTF-8")
df_coded
View(df_coded)
df_coded %>%
select(Author) %>%
tidyr::separate_rows(Author, sep = ";")
df_coded %>%
select(Author) %>%
tidyr::separate_rows(Author, sep = ";") %>%
mutate(authors_new = trimws(Author),
authors_new = tolower(authors_new)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
df_authors
write.csv(df_authors, "review/data/list_authors.csv")
View(df_authors)
df_coded %>%
select(Author) %>%
tidyr::separate_rows(Author, sep = ";") %>%
mutate(authors_new = trimws(Author)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
df_authors
df_coded %>%
select(Author) %>%
tidyr::separate_rows(Author, sep = ";") %>%
mutate(authors_new = trimws(Author),
authors_new = tolower(authors_new)) %>% #Removing leading and/or trailing white spaces
select(authors_new) %>%
count(authors_new) %>%
arrange(desc(n)) -> df_authors #n=268 authors with 4 - 1 papers in the selected list
write.csv(df_authors, "review/data/list_authors.csv")
df_authors
write.csv(df_authors, "review/data/list_authors.csv")
readr::read_csv("data/literature_coded_abstracts.csv") %>% drop_na(abstract) %>%
select(abstract, code = "lukas.birkenmaier@gesis.org",journal) %>%
mutate(abstract_join = tolower(abstract)) %>%
ggplot(aes(x=reorder(journal, table(journal)[journal]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
readr::read_csv("Review/data/literature_coded_abstracts.csv") %>% drop_na(abstract) %>%
select(abstract, code = "lukas.birkenmaier@gesis.org",journal) %>%
mutate(abstract_join = tolower(abstract)) %>%
ggplot(aes(x=reorder(journal, table(journal)[journal]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
ggsave("plots/v0_journal_distribution.jpeg")
ggsave("Review/plots/v0_journal_distribution.jpeg")
df_coded  %>%
ggplot(aes(x=reorder(JOURNAL, table(JOURNAL)[JOURNAL]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df_coded
View(df_coded)
df_coded  %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df_coded  %>%
drop_na(Publication.Title) %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df_coded  %>%
drop_na(Publication.Title) %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title])))
df_coded  %>%
drop_na(Publication.Title) %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title]))) +
geom_bar()
df_coded  %>%
drop_na(Publication.Title) %>% select(Publication.Title)
df_coded  %>%
janitor::remove_empty("rows")
df_coded  %>%
janitor::remove_empty("rows") %>% select(Publication.Title)
df_coded  %>%
janitor::remove_empty("rows") %>% select(Publication.Title) %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
df_coded  %>%
select(Publication.Title) %>%
ggplot(aes(x=reorder(Publication.Title, table(Publication.Title)[Publication.Title]))) +
geom_bar() +
coord_flip() +
xlab("") +
theme_bw()
ggsave("plots/v1_journal_distribution.jpeg")
ggsave("Review/plots/v1_journal_distribution.jpeg")
df_authors
write.csv(df_authors, "Interviews/list_authors.csv")
library(tidyverse)
dplyr::starwars
print("x")
Sys.getenv()
Sys.getenv()
getwd()
